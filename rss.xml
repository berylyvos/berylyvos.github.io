<?xml version="1.0" encoding="utf-8"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Shingo四叠半</title><link>https://berylyvos.icu/</link><description>This is Shigo Gnix's no interest blog.</description><generator>Hugo 0.104.3 https://gohugo.io/</generator><language>zh-CN</language><managingEditor>berylyvos@gmail.com (Shingo)</managingEditor><webMaster>berylyvos@gmail.com (Shingo)</webMaster><copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright><lastBuildDate>Mon, 20 Mar 2023 15:24:32 +0000</lastBuildDate><atom:link rel="self" type="application/rss+xml" href="https://berylyvos.icu/rss.xml"/><item><title>CMU15-445(Fall 2022) 笔记：Hash Tables</title><link>https://berylyvos.icu/posts/15-445-note-hashtables/</link><guid isPermaLink="true">https://berylyvos.icu/posts/15-445-note-hashtables/</guid><pubDate>Mon, 20 Mar 2023 23:07:58 +0800</pubDate><author>berylyvos@gmail.com (Shingo)</author><copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright><description>&lt;h1 id="hash-table">Hash Table&lt;/h1>
&lt;h1 id="hash-function">Hash Function&lt;/h1>
&lt;h1 id="static-hashing-schemes">Static Hashing Schemes&lt;/h1>
&lt;h2 id="linear-probe-hashing">Linear Probe Hashing&lt;/h2>
&lt;h2 id="robin-hood-hashing">Robin Hood Hashing&lt;/h2>
&lt;h2 id="cuckoo-hashing">Cuckoo Hashing&lt;/h2>
&lt;h1 id="dynamic-hashing-schemes">Dynamic Hashing Schemes&lt;/h1>
&lt;h2 id="chained-hashing">Chained Hashing&lt;/h2>
&lt;h2 id="extendible-hashing">Extendible Hashing&lt;/h2>
&lt;h2 id="linear-hashing">Linear Hashing&lt;/h2></description><category domain="https://berylyvos.icu/categories/cmu15-445/">CMU15-445</category><category domain="https://berylyvos.icu/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/">数据库</category><category domain="https://berylyvos.icu/tags/%E7%AC%94%E8%AE%B0/">笔记</category><category domain="https://berylyvos.icu/tags/hashing-scheme/">Hashing Scheme</category></item><item><title>CMU15-445(Fall 2022) 笔记：Pilot</title><link>https://berylyvos.icu/posts/15-445-note-1/</link><guid isPermaLink="true">https://berylyvos.icu/posts/15-445-note-1/</guid><pubDate>Sun, 05 Mar 2023 22:53:43 +0800</pubDate><author>berylyvos@gmail.com (Shingo)</author><copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright><description>&lt;h1 id="关系模型与关系代数">关系模型与关系代数&lt;/h1>
&lt;blockquote>
&lt;p>A database is an organized collection of inter-related data that models some aspect of the real-world.&lt;/p>
&lt;/blockquote>
&lt;p>不要混淆“数据库(database)”和“数据库管理系统(database management system, DBMS)”。&lt;/p>
&lt;blockquote>
&lt;p>A DBMS is a software that allows applications to store and analyze information in a database.&lt;/p>
&lt;/blockquote>
&lt;p>MySQL, Oracle, MongoDB, Snowflake这些都是DBMS。&lt;/p>
&lt;p>&lt;strong>关系模型&lt;/strong>基于关系定义数据库抽象，解耦合逻辑层与物理层。&lt;/p>
&lt;ul>
&lt;li>将数据库存储在简单的数据结构(关系)中。&lt;/li>
&lt;li>通过高级语言访问数据，DBMS找出最佳执行策略。&lt;/li>
&lt;li>物理存储留给DBMS实现。&lt;/li>
&lt;/ul>
&lt;p>从数据库中存储和检索信息通常有两种语言：&lt;/p>
&lt;ul>
&lt;li>Procedural：查询命令需要指定 DBMS 执行时的具体查询策略（关系代数）&lt;/li>
&lt;li>Non-Procedural（Declarative）：只需要指定想要查询哪些数据，无需关心具体查询实现（关系演算）&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>关系代数&lt;/strong>是一种Procedural语言，因为它定义了如何计算查询的high-level步骤（比如先做join还是projection，这对于查询优化很重要）&lt;/p>
&lt;h1 id="现代sql">现代SQL&lt;/h1>
&lt;p>SQL是关系数据库的Declarative的查询语言。当前SQL的标准是SQL-2016，目前大部分DBMS至少支持SQL-92标准。&lt;/p>
&lt;h2 id="count-count1-countcolumn">count(*), count(1), count(column)&lt;/h2>
&lt;p>&lt;code>count(*)&lt;/code>和&lt;code>count(1)&lt;/code>从结果上看是一致的。这里的&lt;code>*&lt;/code>和&lt;code>1&lt;/code>并不是指查询的列的数量，即便是&lt;code>count('whatever the parameter is')&lt;/code>也是一样的结果。传入给&lt;code>count()&lt;/code>的参数会赋值给表的每一行，&lt;code>count()&lt;/code>函数会计算该参数一共被赋值了几次，即表的行数。
&lt;code>count(column)&lt;/code>只统计&lt;code>column != NULL&lt;/code>的行。&lt;/p>
&lt;h2 id="窗口函数">窗口函数&lt;/h2>
&lt;p>窗口函数在一组相关的元组之间执行“滑动”计算。类似于聚合，但元组不是分组合并到单个输出元组，而是每个元组新增了一列窗口函数的计算结果。
除了普通聚合函数外，还有些特殊的窗口函数，如&lt;code>ROW_NUMBER()&lt;/code>和&lt;code>RANK()&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-mysql" data-lang="mysql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- Find the student with the second highest grade for each course.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">RANK&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">OVER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PARTITION&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">BY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cid&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ORDER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">BY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">grade&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ASC&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rank_&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">enrolled&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ranking&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ranking&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rank_&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="cte">CTE&lt;/h2>
&lt;p>CTE可用作复杂查询时的临时中间表。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">WITH&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cteName&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">col1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">col2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">col1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">col2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cteName&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Recursive CTE可以在SQL查询中实现递归。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- Print the sequence of numbers from 1 to 10.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">WITH&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">RECURSIVE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cteSource&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">counter&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">UNION&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ALL&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">counter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cteSource&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">counter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cteSource&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="存储">存储&lt;/h1>
&lt;p>主要讨论“面向磁盘”的DBMS体系结构，该体系结构假设数据库的主要存储位置在non-volatile磁盘(SSD, HDD)上。&lt;/p>
&lt;h2 id="面向磁盘的dbms">面向磁盘的DBMS&lt;/h2>
&lt;p>&lt;img src="https://s2.loli.net/2023/03/17/7DgvBXJ4C5T1QsV.png" alt="disk-oriented-dbms">&lt;/p>
&lt;p>数据库全部在磁盘上，数据库文件中的数据被组织成页，第一页是目录页。
为了对数据进行操作，DBMS需要将数据放入内存中。它通过缓冲池（Buffer Pool）来管理数据在磁盘和内存之间的来回移动。
执行引擎将向缓冲池请求特定的页面，缓冲池将负责将该页放入内存，并向执行引擎提供内存中该页的指针。&lt;/p>
&lt;h3 id="为什么不用mmap">为什么不用mmap&lt;/h3>
&lt;p>简单来说，不用 mmap 是为了&lt;strong>更好的控制和性能&lt;/strong>。
如果 mmap 遇到 page fault，进程将会被阻塞。mmap 不好做异常处理，也存在事务安全问题。
DBMS 比 OS 拥有更多、更充分的知识来决定数据移动的时机和数量，具体包括：&lt;/p>
&lt;ul>
&lt;li>将 dirty pages 按正确地顺序写到磁盘&lt;/li>
&lt;li>根据具体情况预获取数据&lt;/li>
&lt;li>定制化缓存置换策略&lt;/li>
&lt;li>线程/进程调度&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>更详细的讨论可以看这篇论文 &lt;a href="https://db.cs.cmu.edu/papers/2022/cidr2022-p13-crotty.pdf">Are You Sure You Want to Use MMAP in Your Database Management System?&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="文件存储">文件存储&lt;/h2>
&lt;p>DBMS的存储管理器负责管理数据库的文件。它将文件表示为page的集合。它还跟踪哪些数据被读和写到了page上，以及这些page有多少可用空间。&lt;/p>
&lt;h3 id="database-pages">Database Pages&lt;/h3>
&lt;p>OS 的文件系统通常将文件切分成 pages 进行管理，DBMS 也不例外。通常 page 是固定大小的一块数据，每个 page 内部可能存储着 &lt;strong>tuples、meta-data、indexes&lt;/strong> 以及 &lt;strong>logs&lt;/strong> 等。
大多数DBMS使用固定大小的page(1-16KB)，以避免支持可变大小page所需的工程开销。&lt;/p>
&lt;p>不同 DBMS 管理 pages 的方式不同，主要分为以下几种：&lt;/p>
&lt;ul>
&lt;li>Heap File Organization&lt;/li>
&lt;li>Tree File Organization&lt;/li>
&lt;li>Sequential/Sorted File Organization (ISAM)&lt;/li>
&lt;li>Hashing File Organization&lt;/li>
&lt;/ul>
&lt;h3 id="heap-file-organization">Heap File Organization&lt;/h3>
&lt;p>Heap file 是一个无序的 pages 集合，pages 管理模块需要记录哪些 pages 已经被使用，哪些尚未被使用。主要有以下两种方法：&lt;/p>
&lt;ul>
&lt;li>Linked List: Header page 持有指向&lt;code>free pages list&lt;/code>和&lt;code>data pages list&lt;/code>的指针。它必须在数据页列表上进行顺序扫描。&lt;/li>
&lt;li>Page Directory: pages 管理模块维护着一些特殊的 pages（directory pages），它们负责记录 data pages 的位置和空闲空间大小。&lt;/li>
&lt;/ul>
&lt;h3 id="page-layout">Page Layout&lt;/h3>
&lt;p>每个 page 被分为两个部分：header 和 data，header通常包含：page大小, checksum, DBMS版本, 事务可见性, 压缩信息。
data 中记录着真正存储的数据，数据记录的形式主要有:&lt;/p>
&lt;ul>
&lt;li>Tuple-oriented（slotted-pages）：记录数据本身&lt;/li>
&lt;li>Log-structured：记录数据的操作日志&lt;/li>
&lt;/ul>
&lt;h4 id="slotted-pages">Slotted Pages&lt;/h4>
&lt;p>Tuple-oriented中，最常用的Layout方案是 &lt;strong>slotted pages&lt;/strong>。header 中的 slot array 记录每个 slot 的信息，如大小、位移等
。
&lt;img src="https://s2.loli.net/2023/03/17/8OELXjg5KDbVShA.png" alt="slotted_page">&lt;/p>
&lt;ul>
&lt;li>新增记录时：在 slot array 中新增一条记录，存放该记录的入口地址。slot array 与 data 从 page 的两端向中间生长，二者相遇时，就认为这个 page 已经满了。&lt;/li>
&lt;li>删除记录时：假设删除 tuple #3，可以将 slot array 中的第三条记录删除，并将 tuple #4 及其以后的数据都都向后移动，填补 tuple #3 的空位。&lt;/li>
&lt;/ul>
&lt;h4 id="log-structured">Log-Structured&lt;/h4>
&lt;p>Slotted-Page Design 带来的问题：&lt;/p>
&lt;ul>
&lt;li>Fragmentation：删除tuple会在page中留下碎片。&lt;/li>
&lt;li>Useless Disk I/O：由于非易失性存储的block-oriented的性质，需要读取整个块来获取tuple。&lt;/li>
&lt;li>Random Disk I/O：磁盘阅读器可能不得不跳到20个不同的地方来更新20个tuples，这可能会非常慢。&lt;/li>
&lt;/ul>
&lt;p>log-structured page 只存储更改（PUT, DELETE）的日志记录。因此，增删改的效率很高。
为了读取一条记录，DBMS从最新到最旧扫描page并重新创建tuple。为了加快查询效率，通常会对操作日志在记录 id 上建立索引。
还需要定期做日志压缩。&lt;/p>
&lt;h3 id="tuple-layout">Tuple Layout&lt;/h3>
&lt;p>每个 tuple 被分配一个唯一的记录标识符。最常用的方式：&lt;code>page_id + offset/slot&lt;/code>。例如，PostgreSQL使用 CTID (6-bytes)，SQLite使用 ROWID (8-bytes)。
tuple 的元数据包含：&lt;/p>
&lt;ul>
&lt;li>Visibility Info (concurrency control)&lt;/li>
&lt;li>Bit Map for NULL values&lt;/li>
&lt;/ul>
&lt;h2 id="oltp--olap">OLTP &amp;amp; OLAP&lt;/h2>
&lt;ul>
&lt;li>OLTP(Online Transaction Processing): 主要处理简单的读写语句，且每个语句都只操作数据库中的一小部分数据&lt;/li>
&lt;li>OLAP(Online Analytical Processing): 主要处理复杂的，需要检索大量数据并聚合的操作&lt;/li>
&lt;li>HTAP(Hybrid Transaction + Analytical Processing)&lt;/li>
&lt;/ul>
&lt;h2 id="storage-models">Storage Models&lt;/h2>
&lt;ul>
&lt;li>行存储：NSM (N-ary Storage Model)：将一个 tuple 的所有 attributes 在 page 中连续地存储，适合 OLTP 场景。&lt;/li>
&lt;li>列存储：DSM (Decomposition Storage Model)：将所有 tuples 的单个 attribute 连续地存储在一个 page 中，适用于 OLAP 场景。&lt;/li>
&lt;/ul></description><category domain="https://berylyvos.icu/categories/cmu15-445/">CMU15-445</category><category domain="https://berylyvos.icu/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/">数据库</category><category domain="https://berylyvos.icu/tags/%E7%AC%94%E8%AE%B0/">笔记</category></item><item><title>简单做个BitTorrent客户端</title><link>https://berylyvos.icu/posts/gorrent/</link><guid isPermaLink="true">https://berylyvos.icu/posts/gorrent/</guid><pubDate>Thu, 17 Nov 2022 11:15:54 +0800</pubDate><author>berylyvos@gmail.com (Shingo)</author><copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright><description>&lt;h1 id="功能">功能&lt;/h1>
&lt;ul>
&lt;li>多文件torrent下载&lt;/li>
&lt;li>支持UDP/HTTP Tracker&lt;/li>
&lt;li>&lt;del>支持DHT，PeX，磁力链接&lt;/del>&lt;/li>
&lt;/ul>
&lt;h1 id="golang实现">Golang实现&lt;/h1>
&lt;h2 id="找peers">找peers&lt;/h2>
&lt;h3 id="torrent文件结构与bencode编码">Torrent文件结构与Bencode编码&lt;/h3>
&lt;p>一个torrent文件包含一个&lt;strong>文件列表&lt;/strong>和关于所有片段的&lt;strong>完整性元数据&lt;/strong>(integrity metadata)，并可选地包含一个很长的&lt;strong>tracker&lt;/strong>列表，并由&lt;strong>Bencode&lt;/strong>编码。&lt;/p>
&lt;p>Bencode编码支持4种数据类型：byte string，integer，list和dictionary。&lt;/p>
&lt;p>以电影&lt;a href="https://www.imdb.com/title/tt0088847/">《早餐俱乐部》&lt;/a>为例，其torrent文件结构如下所示：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">d&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">8&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nx">announce&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">43&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nx">udp&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="c1">//tracker.coppersurfer.tk:6969/announce
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mi">13&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nx">announce&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">list&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">l&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">l43&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nx">udp&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="c1">//tracker.coppersurfer.tk:6969/announcee
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">l49&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nx">udp&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="c1">//tracker.leechers-paradise.org:6969/announcee
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">l38&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nx">udp&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="c1">//tracker.cyberia.is:6969/announcee
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">e&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">7&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nx">comment&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">80&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nx">The&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Breakfast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Club&lt;/span>&lt;span class="mf">.1985&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">REMASTERED&lt;/span>&lt;span class="mf">.720&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">BluRay&lt;/span>&lt;span class="mf">.999&lt;/span>&lt;span class="nx">MB&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HQ&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">x265&lt;/span>&lt;span class="mf">.10&lt;/span>&lt;span class="nx">bit&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">GalaxyRG&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">TGx&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">13&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nx">creation&lt;/span> &lt;span class="nx">date&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">i1600189812e&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">4&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nx">info&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">d&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">5&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nx">files&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">l&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">d&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">6&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nx">length&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">i1035352868e&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">4&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nx">path&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">l79&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nx">The&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Breakfast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Club&lt;/span>&lt;span class="mf">.1985&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">REMASTERED&lt;/span>&lt;span class="mf">.720&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">BluRay&lt;/span>&lt;span class="mf">.999&lt;/span>&lt;span class="nx">MB&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HQ&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">x265&lt;/span>&lt;span class="mf">.10&lt;/span>&lt;span class="nx">bit&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">GalaxyRG&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">mkve&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">e&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">d&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">6&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nx">length&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">i678e&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">4&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nx">path&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">l42&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="nx">TGx&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="nx">Downloaded&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="nx">torrentgalaxy&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">to&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="nx">txte&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">e&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">e&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">4&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nx">name&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">80&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nx">The&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Breakfast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Club&lt;/span>&lt;span class="mf">.1985&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">REMASTERED&lt;/span>&lt;span class="mf">.720&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">BluRay&lt;/span>&lt;span class="mf">.999&lt;/span>&lt;span class="nx">MB&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HQ&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">x265&lt;/span>&lt;span class="mf">.10&lt;/span>&lt;span class="nx">bit&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">GalaxyRG&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">TGx&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">12&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nx">piece&lt;/span> &lt;span class="nx">length&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">i524288e&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">6&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nx">pieces&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">39500&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="err">���&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="nx">ģ&lt;/span>&lt;span class="err">�&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="err">�&lt;/span>&lt;span class="nx">Ɇp&lt;/span>&lt;span class="err">�&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="err">��&lt;/span>&lt;span class="nx">HH&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="err">�`&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">|&lt;/span>&lt;span class="err">���&lt;/span> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">e&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">e&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在这个字典中，所有键和字符串类型值的结构都是&lt;code>length:xxx&lt;/code>，整型表示为&lt;code>ixxxe&lt;/code>，列表为&lt;code>l[]...[]e&lt;/code>，字典为&lt;code>d(key:[])...(key:[])e&lt;/code>，其中，&lt;code>[]&lt;/code>可以为四种类型的任意一种。&lt;/p>
&lt;ul>
&lt;li>&lt;code>announce&lt;/code>：tracker的URL&lt;/li>
&lt;li>&lt;code>announce-list&lt;/code>：tracker的URL列表（可选）&lt;/li>
&lt;li>&lt;code>info&lt;/code>：包含文件共享信息的字典
&lt;ul>
&lt;li>&lt;code>files&lt;/code>：文件字典列表（仅当共享多个文件时）
&lt;ul>
&lt;li>&lt;code>length&lt;/code>：文件的大小，以字节为单位&lt;/li>
&lt;li>&lt;code>path&lt;/code>：与子目录名称对应的字符串列表，其中最后一个是实际的文件名&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>name&lt;/code>：建议要保存的文件名（单文件）/ 建议的目录名称（多文件）&lt;/li>
&lt;li>&lt;code>piece length&lt;/code>：文件片的大小，通常为256 KB&lt;/li>
&lt;li>&lt;code>pieces&lt;/code>：每个文件片的二进制编码的SHA-1哈希列表（如果有多文件，则按文件字典中的顺序拼接在一起）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>一个torrent文件是由&lt;strong>infohash&lt;/strong>唯一标识的，其值为整个&lt;code>info&lt;/code>的SHA-1哈希。&lt;/p>
&lt;h3 id="解析torrent文件">解析torrent文件&lt;/h3>
&lt;p>解析bencode编码的torrent文件，本质是递归下降。当然，Marshal/Unmarshal的过程需要借助go的反射。最终解析得到一个扁平化的结构体&lt;code>TorrentFile&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">type&lt;/span> &lt;span class="nx">TorrentFile&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Announce&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">AnnounceList&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">InfoSHA&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">ShaLen&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">byte&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">FileList&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="nx">File&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">FileName&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">FileLen&lt;/span> &lt;span class="kt">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">PieceLen&lt;/span> &lt;span class="kt">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">PieceSHA&lt;/span> &lt;span class="p">[][&lt;/span>&lt;span class="nx">ShaLen&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">byte&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">HasMulti&lt;/span> &lt;span class="kt">bool&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="从tracker获取peers信息">从tracker获取peers信息&lt;/h3>
&lt;p>根据&lt;code>Announce&lt;/code>中URL的协议类型，可将tracker分为UDP/HTTP tracker。&lt;/p>
&lt;h4 id="http">HTTP&lt;/h4>
&lt;p>想要得到peers信息，需要给tracker发送一个GET请求。参数列表如下：&lt;/p>
&lt;ul>
&lt;li>&lt;code>info_hash&lt;/code>：torrent文件中&lt;code>info&lt;/code>字典（bencode编码）的SHA-1哈希&lt;/li>
&lt;li>&lt;code>peer_id&lt;/code>：客户端随机生成的20字节长度字符串&lt;/li>
&lt;li>&lt;code>port&lt;/code>：客户端监听的端口&lt;/li>
&lt;li>&lt;code>uploaded&lt;/code>：当前已上传量&lt;/li>
&lt;li>&lt;code>downloaded&lt;/code>：当前已下载量&lt;/li>
&lt;li>&lt;code>left&lt;/code>：当前剩余下载量&lt;/li>
&lt;/ul>
&lt;p>tracker收到请求后返回一个bencode编码的字典。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">d&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">8&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nx">interval&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">i900e&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">5&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nx">peers&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">252&lt;/span>&lt;span class="p">:([&lt;/span>&lt;span class="nx">ip&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="nx">port&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">e&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>其中，&lt;code>interval&lt;/code>表示请求tracker的时间间隔，&lt;code>peers&lt;/code>包含了peer的IP地址和端口信息（大端表示），其值为每6字节一组的二进制数据。同样，需要解析得到peer信息切片。&lt;/p>
&lt;h4 id="udp">UDP&lt;/h4>
&lt;p>为了减少HTTP请求给tracker服务器带来的开销、提升性能，tracker也支持UDP。&lt;/p>
&lt;p>与HTTP的一次请求响应不同，由于UDP不可靠，客户端至少需要发送两个UDP数据包。为了保证安全性，tracker在收到客户端的第一个包时返回一个&lt;code>connection_id&lt;/code>，让客户端在下一个包带上该参数，收到后校验。同时，&lt;code>connection_id&lt;/code>一段时间后会失效。&lt;/p>
&lt;h5 id="connect">Connect&lt;/h5>
&lt;p>首先，客户端发送connect包，参数如下：&lt;/p>
&lt;ul>
&lt;li>&lt;code>protocol_id&lt;/code>：0x41727101980，用于标识协议&lt;/li>
&lt;li>&lt;code>action&lt;/code>：0 表示connect请求&lt;/li>
&lt;li>&lt;code>transaction_id&lt;/code>：随机值，4Bytes&lt;/li>
&lt;/ul>
&lt;p>tracker服务器返回的包：&lt;/p>
&lt;ul>
&lt;li>&lt;code>action&lt;/code>：0 表示connect请求（如果出错则为3）&lt;/li>
&lt;li>&lt;code>transaction_id&lt;/code>：与客户端请求值一致&lt;/li>
&lt;li>&lt;code>connection_id&lt;/code>：由tracker生成，用于标识客户端&lt;/li>
&lt;/ul>
&lt;h5 id="announce">Announce&lt;/h5>
&lt;p>随后，客户端发送announce包，参数如下：&lt;/p>
&lt;ul>
&lt;li>&lt;code>connection_id&lt;/code>：tracker返回的connection_id&lt;/li>
&lt;li>&lt;code>action&lt;/code>：1 表示announce请求&lt;/li>
&lt;li>&lt;code>transaction_id&lt;/code>：随机值，4Bytes&lt;/li>
&lt;li>&lt;code>event&lt;/code>：none = 0, completed = 1, started = 2, stopped = 3&lt;/li>
&lt;li>&lt;code>key&lt;/code>：随机值，4Bytes&lt;/li>
&lt;li>&lt;code>num_want&lt;/code>：想要tracker返回的最大peers数量，-1为默认值&lt;/li>
&lt;/ul>
&lt;p>剩余的&lt;code>info_hash&lt;/code>，&lt;code>peer_id&lt;/code>这些参数与HTTP请求tracker时相同。
最后，tracker服务器返回包含peers信息的包：&lt;/p>
&lt;ul>
&lt;li>&lt;code>action&lt;/code>：1 表示announce请求&lt;/li>
&lt;li>&lt;code>transaction_id&lt;/code>：与客户端请求值一致&lt;/li>
&lt;li>&lt;code>interval&lt;/code>：下一次客户端announce的时间间隔&lt;/li>
&lt;li>&lt;code>leechers&lt;/code>：未完成下载的peers数量&lt;/li>
&lt;li>&lt;code>seeders&lt;/code>：已经完成下载且愿意继续上传的peers数量&lt;/li>
&lt;/ul>
&lt;p>包的最后是6字节一组的peers信息（IP + Port）。&lt;/p>
&lt;h2 id="下载">下载&lt;/h2>
&lt;h3 id="tcp连接与bittorrent握手">TCP连接与BitTorrent握手&lt;/h3>
&lt;h3 id="与peers交换信息">与peers交换信息&lt;/h3>
&lt;h3 id="并发控制">并发控制&lt;/h3>
&lt;h1 id="参考">参考&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://www.bittorrent.org/beps/bep_0003.html">BEP-3: The BitTorrent Protocol Specification&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://wiki.theory.org/BitTorrentSpecification">Bittorrent Protocol Specification v1.0&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/archeryue/go-torrent">A toy torrent client written in golang&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.jse.li/posts/torrent">Building a BitTorrent client from the ground up in Go&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://bittorrent.org/beps/bep_0015.html">BEP-15: UDP Tracker Protocol for BitTorrent&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://lifehacker.com/bittorrent-s-future-dht-pex-and-magnet-links-explain-5411311">BitTorrent’s Future: DHT, PEX, and Magnet Links Explained&lt;/a>&lt;/li>
&lt;/ul></description><category domain="https://berylyvos.icu/categories/%E7%8E%A9/">玩</category><category domain="https://berylyvos.icu/tags/golang/">Golang</category><category domain="https://berylyvos.icu/tags/bittorrent/">BitTorrent</category></item><item><title>void kernel</title><link>https://berylyvos.icu/posts/hello-world/</link><guid isPermaLink="true">https://berylyvos.icu/posts/hello-world/</guid><pubDate>Fri, 11 Nov 2022 01:38:56 +0800</pubDate><author>berylyvos@gmail.com (Shingo)</author><copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright><description>&lt;h1 id="hello">Hello&lt;/h1>
&lt;hr>
&lt;p>Okay,&lt;br>
this is Crazy.&lt;/p>
&lt;h2 id="void-kernel">void kernel&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-brainfuck" data-lang="brainfuck">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">++++++++++&lt;/span>&lt;span class="k">[&lt;/span>&lt;span class="nv">&amp;gt;&lt;/span>&lt;span class="nb">+++++++&lt;/span>&lt;span class="nv">&amp;gt;&lt;/span>&lt;span class="nb">+++++++++++&lt;/span>&lt;span class="nv">&amp;gt;&lt;/span>&lt;span class="nb">+++&lt;/span>&lt;span class="nv">&amp;lt;&amp;lt;&amp;lt;&lt;/span>&lt;span class="nb">-&lt;/span>&lt;span class="k">]&lt;/span>&lt;span class="c">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nv">&amp;gt;&lt;/span>&lt;span class="nb">++++++++&lt;/span>&lt;span class="nt">.&lt;/span>&lt;span class="nv">&amp;gt;&lt;/span>&lt;span class="nb">+&lt;/span>&lt;span class="nt">.&lt;/span>&lt;span class="nv">&amp;gt;&lt;/span>&lt;span class="nb">++&lt;/span>&lt;span class="nt">.&lt;/span>&lt;span class="nv">&amp;lt;&amp;lt;&lt;/span>&lt;span class="nb">-------&lt;/span>&lt;span class="nt">.&lt;/span>&lt;span class="nv">&amp;gt;&lt;/span>&lt;span class="nb">------&lt;/span>&lt;span class="nt">.&lt;/span>&lt;span class="nb">+++++&lt;/span>&lt;span class="c">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nb">++++&lt;/span>&lt;span class="nt">.&lt;/span>&lt;span class="nb">------&lt;/span>&lt;span class="nt">.&lt;/span>&lt;span class="nv">&amp;gt;&lt;/span>&lt;span class="nt">.&lt;/span>&lt;span class="nv">&amp;lt;&amp;lt;&lt;/span>&lt;span class="nb">-&lt;/span>&lt;span class="nt">.&lt;/span>&lt;span class="nv">&amp;gt;&lt;/span>&lt;span class="nb">+++++++++&lt;/span>&lt;span class="nt">.&lt;/span>&lt;span class="nb">-----------&lt;/span>&lt;span class="c">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nb">-------&lt;/span>&lt;span class="nt">.&lt;/span>&lt;span class="nb">++++++++&lt;/span>&lt;span class="nt">.&lt;/span>&lt;span class="nv">&amp;gt;&lt;/span>&lt;span class="nt">.&lt;/span>&lt;span class="nv">&amp;lt;&amp;lt;&lt;/span>&lt;span class="nb">+++++++&lt;/span>&lt;span class="nt">.&lt;/span>&lt;span class="nv">&amp;gt;&lt;/span>&lt;span class="nb">------&lt;/span>&lt;span class="nt">.&lt;/span>&lt;span class="nv">&amp;gt;&lt;/span>&lt;span class="nb">+&lt;/span>&lt;span class="nt">.&lt;/span>&lt;span class="c">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="good">Good&lt;/h2>
&lt;h3 id="-2147483648">-2147483648&lt;/h3>
&lt;h4 id="acwing-291-蒙德里安的梦想httpswwwacwingcomactivitycontentproblemcontent1010">&lt;a href="https://www.acwing.com/activity/content/problem/content/1010/">AcWing 291. 蒙德里安的梦想&lt;/a>&lt;/h4>
&lt;p>求把 $N×M$ 的棋盘分割成若干个 $1×2$ 的长方形，有多少种方案。&lt;/p>
&lt;p>例如当 $N=2，M=4$ 时，共有 $5$ 种方案。当 $N=2，M=3$ 时，共有 $3$ 种方案。&lt;/p>
&lt;p>&lt;img src="https://berylyvos.icu/img/mondriaan.jpeg" alt="mondriaan">&lt;/p>
&lt;p>数据范围： $1≤N,M≤11$&lt;/p>
&lt;p>输入样例：&lt;/p>
&lt;pre tabindex="0">&lt;code>1 2
1 3
1 4
2 2
2 3
2 4
2 11
4 11
0 0
&lt;/code>&lt;/pre>&lt;p>输出样例：&lt;/p>
&lt;pre tabindex="0">&lt;code>1
0
1
2
3
5
144
51205
&lt;/code>&lt;/pre>&lt;p>代码：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c++" data-lang="c++">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;iostream&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;cstring&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;vector&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;algorithm&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">N&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">M&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">N&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">long&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">N&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">M&lt;/span>&lt;span class="p">];&lt;/span> &lt;span class="c1">// f[i][j] 前i-1列都摆好，且从第i-1列伸出到第i列的状态是j的所有方案数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">bool&lt;/span> &lt;span class="n">st&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">M&lt;/span>&lt;span class="p">];&lt;/span> &lt;span class="c1">// 每种状态是否有连续奇数个零，有则状态无效为false
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">vector&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">state&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">M&lt;/span>&lt;span class="p">];&lt;/span> &lt;span class="c1">// state[i][j] 状态i的前一列的合法状态j
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 预处理1：st[]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// 枚举每种状态
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">cnt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">bool&lt;/span> &lt;span class="n">isValid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// 状态 i 的第 j+1 位为1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">cnt&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// cnt为奇数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">isValid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">++&lt;/span>&lt;span class="n">cnt&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">cnt&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">isValid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">st&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">isValid&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 预处理2：相邻两列的合法状态 state[][]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">state&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">clear&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">st&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// i &amp;amp; j == 0 表示 相邻两列没有重合部分
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// st[i | j] 表示 两列合并后没有连续奇数个零
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">state&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">push_back&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// dp
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">memset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">f&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nl">k&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">state&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">f&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="bye">Bye&lt;/h2>
&lt;p>&lt;img src="https://berylyvos.icu/img/yojouhan_cover.png" alt="yojouhan">&lt;/p></description><category domain="https://berylyvos.icu/categories/void/">void</category><category domain="https://berylyvos.icu/tags/c-/">C++</category><category domain="https://berylyvos.icu/tags/brainfuck/">Brainfuck</category><category domain="https://berylyvos.icu/tags/%E7%AE%97%E6%B3%95/">算法</category><category domain="https://berylyvos.icu/tags/voidkernel/">voidkernel</category></item></channel></rss>